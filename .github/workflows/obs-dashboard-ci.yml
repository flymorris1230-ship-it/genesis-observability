name: obs-dashboard CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'apps/obs-dashboard/**'
      - '.github/workflows/obs-dashboard-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/obs-dashboard/**'

jobs:
  build:
    name: Build & Test Dashboard
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: apps/obs-dashboard
        run: npm ci

      - name: Type check
        working-directory: apps/obs-dashboard
        run: npm run type-check

      - name: Lint
        working-directory: apps/obs-dashboard
        run: npm run lint

      - name: Build application
        working-directory: apps/obs-dashboard
        env:
          NEXT_PUBLIC_OBS_EDGE_URL: ${{ secrets.NEXT_PUBLIC_OBS_EDGE_URL }}
          NEXT_PUBLIC_OBS_EDGE_API_KEY: ${{ secrets.NEXT_PUBLIC_OBS_EDGE_API_KEY }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-build
          path: apps/obs-dashboard/.next/
          retention-days: 7

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: apps/obs-dashboard
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN

      - name: Build Project Artifacts
        working-directory: apps/obs-dashboard
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel build --prod --token=$VERCEL_TOKEN

      - name: Deploy to Vercel
        working-directory: apps/obs-dashboard
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN)
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
          echo "âœ… Dashboard deployed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— Deployment URL: $DEPLOYMENT_URL" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Dashboard deployed!\n\nðŸ”— Preview: ${process.env.DEPLOYMENT_URL}`
            })
